@using OutWeb.Models.Manage.ManageLinkModels
@model LinkDetailsDataModel
@{
    string currentUrl = "http://" + HttpContext.Current.Request.Url.Authority;
    string ActionName = Convert.ToString(HttpContext.Current.Request.RequestContext.RouteData.Values["Action"]);
}
<input type="hidden" id="hdnLinkID" name="linkID" value="@Model.Data.主索引" />

<dl class="field">
    <dt class="col-2"><sup title="必填">*</sup> 名稱</dt>
    <dd class="col-8">
        <input type="text" name="名稱" value="@Model.Data.名稱" required placeholder="請輸入名稱">
    </dd>
</dl>
<dl class="field">
    <dt class="col-2"><sup title="必填">*</sup> 網址連結</dt>
    <dd class="col-8">
        <input type="url" id="urlAddr" name="網址連結" value="@Model.Data.網址連結" required placeholder="請輸入網址連結">
    </dd>
</dl>

<dl class="field">
    <dt class="col-2">連結圖</dt>
    <dd class="col-8 file-buffer">
        <div class="input-file">
            <input id="cover" type="file" onchange="previewFiles(this,true);" name="" accept="image/*">
        </div>
        <small class="block font-sm text-secondary">可上傳 1 張圖片，建議尺寸 210*64px，建議檔案大小不超過 100kb</small>

        <ul class="file-pre-ul list-unstyled">

            @foreach (var img in Model.Image)
            {
                string imgUrl = currentUrl + "/" + img.FileUrl;
                int index = Model.Image.IndexOf(img);
                <li class="uploaded">
                    <button type="button" class="close btn-del file-remove-btn" id="@img.FileName">&times;</button>
                    <img src="@imgUrl" width="100" />
                    <input type="hidden" id="" name="ImagesData[@index].ID" value="@img.ID" />
                </li>
            }
        </ul>

    </dd>
</dl>

<dl class="field">
    <dt class="col-2">排序</dt>
    <dd class="col-8">
        <input type="number" value="@Model.Data.排序" class="inline" name="排序">
        <small>數字愈大愈前面</small>
    </dd>
</dl>
@if (Model.Data.狀態)
{
    <dl class="field">
        <dt class="col-2">顯示狀態</dt>
        <dd class="col-8">
            <label class="mr-8">
                <input type="radio" name="狀態" class="radio" value="Y" checked>
                <i class="icon"></i>上架
            </label>

            <label>
                <input type="radio" name="狀態" class="radio" value="N">
                <i class="icon"></i>下架
            </label>
        </dd>
    </dl>
}
else
{
    <dl class="field">
        <dt class="col-2">顯示狀態</dt>
        <dd class="col-8">
            <label class="mr-8">
                <input type="radio" name="狀態" class="radio" value="Y">
                <i class="icon"></i>上架
            </label>

            <label>
                <input type="radio" name="狀態" class="radio" value="N" checked>
                <i class="icon"></i>下架
            </label>
        </dd>
    </dl>
}



<footer class="submit-bar clear mt-24">
    <button id="submitBtn" type="button" class="btn success oi" data-glyph="circle-check">
        確認儲存
    </button>
    <button type="button" class="btn warning oi" data-glyph="circle-x" onclick="location.href='LinksList'">
        回列表
    </button>
</footer>

<script>
    (function ($) {
        $(function () {
            //CKFinder.setupCKEditor(null, { basePath: '/ckfinder/', skin: 'v1' });
            //CKEDITOR.replace('summary');
            if ('@Model.Data.主索引' != '0') {
                if ('@Model.Data.狀態' == '@false') {
                    $("input[name='status'][value='false']").attr("checked", true);
                }
            }
        })
    })(jQuery);
</script>

@*File Upload JS*@
<script>
    var fileList = [];
    var fileLimitImageSize = 1048576;//圖片大小1mb 單位bit
         var fileLimitFileSize = 2097152//檔案大小2mb 單位bit
         var blobBuffer = {};

    //驗證Required欄位
    function validHtmlFormRequired() {
        var valid = true;
        var form = document.getElementById('formManageLinksData');
        for (var i = 0; i < form.elements.length; i++) {
            if (form.elements[i].value === '' && form.elements[i].hasAttribute('required')) {
                alert(form.elements[i].placeholder);
                valid = false;
                return;
            }
        }
        return valid;
    }
    function validUrl(url) {
        var expression = /[-a-zA-Z0-9@@:%_\+.~#?&//=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@@:%_\+.~#?&//=]*)?/gi;
        var regex = new RegExp(expression);

        if (url.match(regex)) {
            return true;

        } else {
            return false;
        }
    }
    $(function () {

        $('#submitBtn').click(function () {
            if ($('#typeList').val() == '') {
                alert('請選擇分類');
                return;
            }
            var valid = validHtmlFormRequired();
            if (!valid) {
                return false;
            }

            var url = $('#urlAddr').val();
            if (url) {
                var urlIsSuccess = validUrl(url);
                if (!urlIsSuccess) {
                    alert('連結位址格式不符合網址格式,ex：http://www.google.com');
                    return;
                }
            }
            postFormWithAjax();
        });
    })

    //ajax送出表單
    function postFormWithAjax() {
        $('.file-obj-input').val('');
        //重置ckeditor content
        for (instance in CKEDITOR.instances) {
            CKEDITOR.instances[instance].updateElement();
        }
        var ID = $('#hdnBookID').val();
        var formData = document.getElementById('formManageLinksData');
        formData = new FormData(formData);

        for (var i = 0; i < fileList.length; i++) {
            var data = fileList[i];
            formData.append(data.type, data.files);
        }

        formData.append("act", 'post');
        formData.append("actionName", '@ActionName');
        formData.append("ID", ID);

        var url = '';

        if (ID == 0) {
            url = "@Url.Content("~/_SysAdm/LinksAdd/")";
        }
        else {
            url = "@Url.Content("~/_SysAdm/LinksEdit/")";
        }
        $.ajax({
            async: false,
            type: "POST",
            url: url,
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (response) {
                window.location.href = response.Url;
            },
            error: function (error) {
                alert('error');
                window.location.reload();
            }
        });
    }

    //下載檔案存為指定檔名
    function downloadFile(elem) {
        //for IE
        if (window.navigator.msSaveOrOpenBlob) {
            if (Object.keys(blobBuffer).length > 0) {
                var key = $(elem).attr('ie-id');
                var obj = blobBuffer[key];

                var blobObject = new Blob([obj.blobObj]);
                window.navigator.msSaveOrOpenBlob(blobObject, obj.fileName);
            }
        }
        else {
            $(elem).attr('download', $(elem).attr('real-name'))
           .attr('href', $(elem).attr('url'))
           .attr('target', '_blank');
        }
    }

    //檔案下載
    $(document).on('click', '.dlFile', function () {
        downloadFile(this);
    });
    //檔案刪除
    $(document).on('click', '.file-remove-btn', function () {
        var fileName = $(this).attr('id');
        var delObj = $(this).attr('del-obj');
        removeFileListItem(fileName, delObj);
        $(this).parent('li').remove();
        $(this).closest('tr').remove();
        resetServerIndex();
    })

    //刪除檔案佇列項目
    function removeFileListItem(fileName, delObj) {
        var delIndex = [];
        for (var i = 0; i < fileList.length; i++) {
            var data = fileList[i];
            if (data.type == delObj && data.files.name == fileName) {
                delIndex.push(i);
            }
        }
        for (var i = 0; i < delIndex.length; i++) {
            fileList.splice(delIndex[i], 1);
        }
    }

    //刪除檔案佇列類型項目(適用於單筆)
    function removeFileListItemByKind(delObj) {
        var delIndex = [];
        for (var i = 0; i < fileList.length; i++) {
            var data = fileList[i];
            if (data.type == delObj) {
                delIndex.push(i);
            }
        }
        for (var i = 0; i < delIndex.length; i++) {
            fileList.splice(delIndex[i], 1);
        }
    }

    //檔案預覽
    function previewFiles(elem, displyImg) {
        var f = elem;
        var id = elem.id;
        //檢查格式尺寸
        var sizePass = checkFileLimitSize(f, fileLimitFileSize);
        var fileType;
        if (id != 'cover') {
            fileType = 'doc';
        }
        else {
            fileType = 'image';
        }

        var fileTypeChk = checkFileExtension(f, fileType);

        if (!sizePass || !fileTypeChk) {
            $('#' + id).empty();
            return;
        }
        for (var i = 0; i < f.files.length; i++) {
            //建立Object URL
            var url = window.URL.createObjectURL(f.files[i]);
            var filename = f.files[i].name;
            var $li;
            var blobObjectFile = f.files[i];
            var ra = '';
            //For IE
            if (window.navigator.msSaveOrOpenBlob) {
                ra = Math.random();
                blobBuffer[ra] = { blobObj: blobObjectFile, fileName: filename };
            }
            if (displyImg) {
                $li = $('<li class="uploaded"><button type="button" class="btn-del file-remove-btn" del-obj="' + id + '" id="' + f.files[i].name + '">&times;</button>' +
               '<img src="' + url + '" width="100" /></li>');
            }
            else {
                $li = $('<li class="uploaded"><button type="button" class="btn-del file-remove-btn" del-obj="' + id + '" id="' + f.files[i].name + '">&times;</button>' +
                   '<a class="dlFile" ie-id="' + ra + '"  href="javascript:;" url="' + url + '" real-name="' + filename + '">' + filename + '</a>' +
                   '</li>');
            }
            var $filesBuffer = $(elem).closest('.file-buffer').find('.file-pre-ul');
            if (!f.multiple) {
                removeFileListItemByKind(id);
                $filesBuffer.empty();
            }

            if (id == 'chapter') {
                var currenIndex = $('.chaDetails').length;
                if (typeof currenIndex === 'undefined') {
                    currenIndex = 0;
                }

                $tr = $(
                '<tr class="item-group">' +
                '<td>' +
               '<span class="item-sq">' + (currenIndex + 1) + '</span>' +
                '<input type="hidden" name="chapterDetails[' + currenIndex + '].ID" class="chaDetails" value="" />' +
                '<input type="hidden" name="chapterDetails[' + currenIndex + '].MapFileID" value="" />' +
                '</td>' +
                '<td class="text-left">' + '<a href="' + url + '">' + f.files[i].name + '</a></td>' +
                '<td><input type="text" placeholder="請輸入標題" required name="chapterDetails[' + currenIndex + '].Alias"  value="">' + '</td>' +
                '<td><input class="text-center"  name="chapterDetails[' + currenIndex + '].SQ" type="number" value="0">' + '</td>' +
                '<td>' +
                    '<button type="button" class="btn sm danger oi file-remove-btn" del-obj="' + id + '" id="' + f.files[i].name + '">&times;</button>' +
                '</td>' +
            '</tr>');

                $('.file-pre-ul-chap').append($tr);
            }
            else {
                $(elem).closest('.file-buffer').find('.file-pre-ul').append($li);
            }
            fileList.push({ type: id, files: f.files[i] });

            //註銷Object URL
            //window.URL.revokeObjectURL(url);
        }
        resetServerIndex();

    }

    //重置serverIndex
    function resetServerIndex() {
        $('.item-group').each(function (index, elem) {
            $(elem).find('.item-sq').html(index + 1);
            $(elem).find("input[name*='chapterDetails']").each(function (i, e) {
                var oldNameSplit = $(e).attr('name').split('.');
                var newModelName = 'chapterDetails[' + index + ']';
                for (var i = 1; i < oldNameSplit.length; i++) {
                    newModelName += '.' + oldNameSplit[i];
                }
                $(e).attr('name', newModelName);
                newModelName = '';
            })
        });
    }
    //檢查尺寸
    function checkFileLimitSize(totalFiles, fileLimitSize) {
        var success = true;
        for (var i = 0; i < totalFiles.files.length; i++) {
            var file = totalFiles.files[i];
            if (file.size > fileLimitSize) {
                success = false;
                alert("圖片或檔案大小不可超過" + (fileLimitSize / 1024) + " kb.");
                break;
            }
        }
        return success;
    }
    //檢查副檔名
    function checkFileExtension(totalFiles, fileType) {
        var success = true;
        var allowedExtension = [];
        var alertMsg = '';
        if (fileType == 'image') {
            allowedExtension = ["image/bmp", "image/gif", "image/jpeg", "image/jpg", "image/png"];
            alertMsg = '只允許上傳 bmp, gif, jpeg, jpg, png圖檔.';
        }
        else if (fileType == 'doc') {
            allowedExtension = ["application/pdf"];
            alertMsg = '只允許上傳 PDF檔.';
        }
        else {
            return;
        }
        for (var i = 0; i < totalFiles.files.length; i++) {
            var fileExtension = totalFiles.files[i].type;
            var findIndex = $.inArray(fileExtension, allowedExtension);
            if (findIndex < 0) {
                success = false;
                alert(alertMsg);
                break;
            }
        }
        return success;
    }
</script>